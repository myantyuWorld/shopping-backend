// Code generated by MockGen. DO NOT EDIT.
// Source: transaction_handler.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v4 "github.com/labstack/echo/v4"
)

// MockITransactionHandler is a mock of ITransactionHandler interface.
type MockITransactionHandler struct {
	ctrl     *gomock.Controller
	recorder *MockITransactionHandlerMockRecorder
}

// MockITransactionHandlerMockRecorder is the mock recorder for MockITransactionHandler.
type MockITransactionHandlerMockRecorder struct {
	mock *MockITransactionHandler
}

// NewMockITransactionHandler creates a new mock instance.
func NewMockITransactionHandler(ctrl *gomock.Controller) *MockITransactionHandler {
	mock := &MockITransactionHandler{ctrl: ctrl}
	mock.recorder = &MockITransactionHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockITransactionHandler) EXPECT() *MockITransactionHandlerMockRecorder {
	return m.recorder
}

// FindByAccountID mocks base method.
func (m *MockITransactionHandler) FindByAccountID(c v4.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByAccountID", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// FindByAccountID indicates an expected call of FindByAccountID.
func (mr *MockITransactionHandlerMockRecorder) FindByAccountID(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByAccountID", reflect.TypeOf((*MockITransactionHandler)(nil).FindByAccountID), c)
}

// FindByID mocks base method.
func (m *MockITransactionHandler) FindByID(c v4.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByID", c)
	ret0, _ := ret[0].(error)
	return ret0
}

// FindByID indicates an expected call of FindByID.
func (mr *MockITransactionHandlerMockRecorder) FindByID(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByID", reflect.TypeOf((*MockITransactionHandler)(nil).FindByID), c)
}
